## <a name="NAMEI vs. inode based file serve"></a> NAMEI vs. inode based file server

There are two different flavours of the AFS file server (the fs process): One uses inodes to store AFS data (volumes, files, metadata), the other uses real files.

The inode-based server needs a file system which supports access by inode and usually a special fsck is required so that the AFS data is not corrupted (since the server does some behind-the-scenes stuff with the file system). The NAMEI file server does not pose any unusual constraints on the underlying filesystem - it's an ordinary userspace program working with (silly-named) files.

You can easily see that you are using an NAMEI file server if there is a directory named `AFSIDat` and with subdirectories like `+` and `+1` in your `/vicep*`.

-- Tino Schwarze - 25 Jul 2003

## <a name="Recommended Partition Types for"></a><a name="Recommended Partition Types for "></a> Recommended Partition Types for use with [[OpenAFS]]

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> namei Server </strong></th>
    <th bgcolor="#99CCCC"><strong> Server vicexx Partition Types </strong></th>
  </tr>
  <tr>
    <td> Any system type </td>
    <td> Basically any filesystem you like, as the new namei file server does not do any fancy stuff behind the scenes but only accesses normal files (their names are a bit strange though). </td>
  </tr>
</table>

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> inode Server </strong></th>
    <th bgcolor="#99CCCC"><strong> Server vicexx Partition Types </strong></th>
  </tr>
  <tr>
    <td> sun4x_5[789] </td>
    <td><code>ufs</code> w/o logging </td>
  </tr>
  <tr>
    <td> aix_4[345] , aix_51 </td>
    <td><code>jfs</code></td>
  </tr>
  <tr>
    <td> sgi_65 </td>
    <td><code>XFS</code></td>
  </tr>
  <tr>
    <td> ppc_darwin_14 </td>
    <td> ??? </td>
  </tr>
  <tr>
    <td> alpha_dux[40,50,51] </td>
    <td><code>ufs</code> , no <code>AdvFS</code> support </td>
  </tr>
</table>

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Client </strong></th>
    <th bgcolor="#99CCCC"><strong> Cache (<code>/usr/vice/cache</code>)Partition Types </strong></th>
  </tr>
  <tr>
    <td> i386_linux24 </td>
    <td><code>ext2</code>, <code>ext3</code></td>
  </tr>
  <tr>
    <td> sun4x_5[789] </td>
    <td><code>ufs</code> without logging or dedicated ufs cache partition with logging, <code>vxfs</code></td>
  </tr>
  <tr>
    <td> aix_4[345] , aix_51 </td>
    <td><code>jfs</code></td>
  </tr>
  <tr>
    <td> sgi_65 </td>
    <td><code>XFS</code></td>
  </tr>
  <tr>
    <td> ppc_darwin_14 </td>
    <td> ??? </td>
  </tr>
  <tr>
    <td> These Don't Work </td>
    <td>[[ReiserFS]], <code>vxfs</code> (HP-UX, Solaris), <code>AdvFS</code> (OSF1/DigitalUnix/CompaqUnix/Tru64Unix) </td>
  </tr>
</table>

Further, [[Tru64Unix]] 5.1 has only server support on ufs. The client is supported under Arla including `AdvFS` (but no server support as of Apr 2002). Server and client should work under DU4.0 and [[Tru64Unix]] 5.0.

- **Question:** Does this table imply that clients can't use the NAMEI backend and still need a specific filesystem? Will this ever change?

-- Todd Lewis - 06 Nov 2002

- **Another Question:** Does this mean that you can use an NFS mount point as a /vicexx if you use a NAMEI fileserver?

-- Chris McClimans - 25 Jul 2003
