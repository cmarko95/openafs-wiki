# <a name="Simple Jobs"></a> Simple Jobs

There are a large number of things that "it would be good to have" in the [[OpenAFS]] code base, that no one has had enough time to actually do. All of the tasks on this list should be relatively straightforward - and not require a significant amount of time to actually acheive. They should make a great starting point for people wanting to get more involved in [[OpenAFS]] development.

If you're thinking of working on one of these, please email the contact just to let them know you're doing so, and to avoid duplication of effort!

## <a name="The List"></a> The List

###### <a name="Implement silly rename for afs r"></a> Implement silly rename for afs renames

We have silly rename support for situations where an file which is open is removed by another process. However, we do not have similar support for where an open file has another file renamed on top of it. This breaks the 'blogbench' benchmarking suite, as well as being a generally bad thing. Fixing this is basically a case of replicating the code in afs\_remove that handles silly renames. This is also a bug in RT - see <http://grand.central.org/rt/Ticket/Display.html?id=124973>, and the mailing list thread at <https://lists.openafs.org/pipermail/openafs-info/2009-February/030928.html>

Contact: Simon Wilkinson &lt;simon@sxw.org.uk&gt;

###### <a name="Use native Linux credentials"></a> Use native Linux credentials

The Linux CM currently uses its own 'struct cred' because, until recently, there was no native structure for managing credentials available in the Linux cache manager. Now that there is one available, we should use (by pointer and reference count) this structure, rather than maintaining our own.

Contact: Simon Wilkinson &lt;simon@sxw.org.uk&gt;

###### <a name="Reuse mini-cache-manager from af"></a> Reuse mini-cache-manager from afscp in afsio

"afsio", a simple command line AFS client useful for administration and testing from Hartmut Reuter, is now included in src/venus. Previous, similar work from Chaskiel Grundman on a program called afscp produced a minimal cache manager, which allowed walking a tree without use of pioctls into a cache manager running on the "host" system. The code should be reused here.

Contact: Derrick Brashear &lt;shadow@dementia.org&gt;

###### <a name="Implement Finder cross-volume dr"></a> Implement Finder cross-volume drag for [[MacOS]]

In versions of OSX through 10.5, attempting to drag objects across volumes in Finder produces error -36, as EXDEV is not properly handled. A userspace helper, similar to the afsdb helper, could be used to do this; All code needed can be patterned on existing code.

Contact: Derrick Brashear &lt;shadow@dementia.org&gt;

-- Derrick Brashear - 09 Nov 2009
