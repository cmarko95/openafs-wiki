# Notes related to an OpenAFS 1.8 branch

The current plan is to make a branch for 1.8 off of master on or about
24 September 2014.
This will allow all of the improvements and cleanup that have accumulated
on master to be in a stable release series, while letting potentially
destabilizing changes such as rxgk and pthreaded bos land on master to
settle.

A 1.8 release would also bring the possibility of using shared libraries, 
which are now available with the use of libtool.  Currently (on master),
all executable binaries are still linked mostly statically, and most of
the shared libraries that are produced during the build are not installed
to the destination tree.  Exceptions are libafshcrypto.so, libkopenafs.so,
and librokenafs.so.  We could consider installing more shared libraries,
and using dynamic linking for executables, either before or after the
branch point.  Doing so would involve deciding on what sorts of ABI
stability guarantees should be provided.

The remainder of this page has three separate lists, for things to be
done before branching, things to be removed from the 1.8 branch after
it is created, and things to be removed from master after the 1.8 branch
is created.

Things to be done pre-branching (aka before pre1):
 
* [done] Make roken, hcrypto, and kopenafs use libtool to build
* [done] Make sure libtool is used properly elsewhere, in particular to install
  shared versions of libafsrpc and libafsauthent, which we ship in
  1.6 but do not currently install on master
* [done] Relatedly, verify that the libraries we do ship do not depend on things
  that we don't ship.
* [done; unfeasible]
  (Optional) Look at the feasibility of installing shared liboafs_foo,
  and using dynamic linkage for the client utilities.
* (rxosd is not going to make it unless someone steps up to do the work;
  we can't block the branch indefinitely on it.)
* Do install and run testing on various platforms; check for memory leaks
  in servers, etc..
* Relatedly, check that the kernel module is properly built and loadable
  on a variety of linuxen.
* [done] Draft Debian packaging (which will help with a lot of the libtool
  validation).
* [done] Whitespace cleanup.
* Any other tree-wide cleanup that people want to get in.
* [partially? done]
  Adjust the default behavior of configure (pthreaded ubik?  more?)
* Beg and plead for documentation updates.
* [done] Tie the installation of the pam module to --enable/disable-kauth
* fix issues with HOST_TO_ZERO and tmay (see gerrit 11287/11290 and related)
* Go through outstanding changes against master and determine
  which should get pulled in for 1.8
* Document KeyFileExt and how to migrate keys from 1.6 to 1.8 format
* Document asetkey list for KeyFileExt keys
* remove vos release -stayup
* Investigate volume header update issues; volume update time is not
  changed by admin operations that alter metadata such as quota, which
  could subsequently get lost.

Things to be done before 1.8 release (but not necessarily before branching):

* Documentation fixes (which ones?)
* Investigate "lockless path through d_revalidate" for potential issues (?)
* Consider defaulting Unix CMs to have crypt mode be the default, and use
  authenticated connections to the VL server.

Things to be removed from 1.8 post-branch:
 
* `src/rxgk`; it is not going to be usable in 1.8
* `src/mcas`; it is not going to be usable in 1.8

Things to be removed from master post-branch:
 
* Several `tfoo` can probably be moved to just `foo`; things like
  `tptserver`, `tvlserver`, `tvolser`, `tsalvaged`.  I'm not sure whether
  `tbudb` and/or `tbutc` are ready.
* push to empty out libutil as much as possible.
* rip out LWP support
* it is tempting to remove kauth, but probably not possible due to agreements with IBM.
* `make dest` support?  Pretty-please?
* upserver
* non-DA fileserver and associated bitmap-later and fast-restart configure knobs
