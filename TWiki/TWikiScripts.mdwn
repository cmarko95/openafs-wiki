<div>
  <ul>
    <li><a href="#TWiki CGI and Command Line Scrip"> TWiki CGI and Command Line Scripts</a><ul>
        <li><a href="#CGI Scripts"> CGI Scripts</a><ul>
            <li><a href="#General Information"> General Information</a><ul>
                <li><a href="#CGI environment"> CGI environment</a></li>
                <li><a href="#Command-line"> Command-line</a></li>
                <li><a href="#Common parameters"> Common parameters</a></li>
              </ul>
            </li>
            <li><a href="#=attach="> attach</a></li>
            <li><a href="#=changes="> changes</a></li>
            <li><a href="#=configure="> configure</a></li>
            <li><a href="#=edit="> edit</a></li>
            <li><a href="#=login="> login</a></li>
            <li><a href="#=logon="> logon</a></li>
            <li><a href="#=manage="> manage</a><ul>
                <li><a href="#=action=createweb="> action=createweb</a></li>
                <li><a href="#=action=delete_UserAccount="> action=deleteUserAccount</a></li>
                <li><a href="#=action=editSettings="> action=editSettings</a></li>
                <li><a href="#=action=bulkRegister="> action=bulkRegister</a></li>
                <li><a href="#=action=saveSettings="> action=saveSettings</a></li>
              </ul>
            </li>
            <li><a href="#=oops="> oops</a></li>
            <li><a href="#=passwd="> passwd</a><ul>
                <li><a href="#=action=changePassword="> action=changePassword</a></li>
              </ul>
            </li>
            <li><a href="#=preview="> preview</a></li>
            <li><a href="#=rdiff="> rdiff</a></li>
            <li><a href="#=register="> register</a></li>
            <li><a href="#=rename="> rename</a></li>
            <li><a href="#=resetpasswd="> resetpasswd</a></li>
            <li><a href="#=rest="> rest</a><ul>
                <li><a href="#Invocation Examples"> Invocation Examples</a></li>
              </ul>
            </li>
            <li><a href="#=save="> save</a></li>
            <li><a href="#=search="> search</a></li>
            <li><a href="#=statistics="> statistics</a></li>
            <li><a href="#=twiki="> twiki</a></li>
            <li><a href="#=upload="> upload</a></li>
            <li><a href="#=view="> view</a></li>
            <li><a href="#=viewfile="> viewfile</a></li>
          </ul>
        </li>
        <li><a href="#Command Line Scripts"> Command Line Scripts</a><ul>
            <li><a href="#=geturl.pl="> geturl.pl</a></li>
            <li><a href="#=rewriteshebang.pl="> rewriteshebang.pl</a></li>
            <li><a href="#=tick_twiki.pl="> tick_twiki.pl</a></li>
          </ul>
        </li>
      </ul>
    </li>
  </ul>
</div>

# <a name="TWiki CGI and Command Line Scrip"></a> TWiki CGI and Command Line Scripts

_Programs on the TWiki server performing actions such as rendering, saving and renaming topics._

The TWiki scripts are located in the `twiki/bin` and `twiki/tools` directories. This topic describes the interfaces to some of those scripts. All scripts in the `twiki/bin` directory can be called from the CGI ([Common Gateway Interface](http://en.wikipedia.org/wiki/Common_Gateway_Interface)) environment or from the command line. The scripts in the `twiki/tools` directory can only be called from the command line.

## <a name="CGI Scripts"></a> CGI Scripts

Details on CGI scripts located in the `twiki/bin` directory.

### <a name="General Information"></a> General Information

#### <a name="CGI environment"></a> CGI environment

In the CGI environment parameters are passed to the scripts via the URL and URL parameters. Environment variables are also used to determine the user performing the action. If the environment is not set up, the default TWiki user is used (usually `guest`).

#### <a name="Command-line"></a> Command-line

You **must** be cd'd to the `twiki/bin` directory to run the scripts from the command line. To avoid issues with file permissions, run the scripts as the web server user such as `nobody` or `www`.

Parameters are passed using '-name' - for example,

    $ cd /usr/local/twiki/bin
    $ save -topic MyWeb.MyTopic -user admin -action save -text "New text of the topic"

All parameters require a value.

#### <a name="Common parameters"></a> Common parameters

All the scripts accept a number of common parameters. The first two components of the URL after the script name are taken as the web and the topic, respectively. Standard URL parameters are:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>topic</code></td>
    <td> If this is set to a URL, TWiki will immediately redirect to that URL. Otherwise it overrides the URL and is taken as the topic name (you can pass Web.TopicName) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>user</code></td>
    <td> Command-line only; set the name of the user performing the action. Note: this usage is inherently insecure, as it bypasses webserver login constraints. For this reason only authorised users should be allowed to execute scripts from the command line. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>skin</code></td>
    <td> Overrides the default skin path (see [[Main/TWikiSkins]]) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>cover</code></td>
    <td> Specifies temporary skin path to prepend to the skin path for this script only (see [[Main/TWikiSkins]]) </td>
    <td>   </td>
  </tr>
</table>

### <a name="=attach="></a> `attach`

Despite the name, this script doesn't actually attach a file to a topic - for that, use `upload`. This script is part of the transactions sequence executed when a file is uploaded from the browser. it just generates the "new attachment" page for a topic.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>filename</code></td>
    <td> Name of existing attachment (if provided, this is a "manage attachment" action) </td>
    <td> none (in which case this is a "new attachment" action) </td>
  </tr>
</table>

### <a name="=changes="></a> `changes`

Shows all the changes in the given web.

The `changes` script can receive one parameter:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>minor</code></td>
    <td> If 0, show only major changes. If 1, show all the changes (both minor and major) </td>
    <td> 0 </td>
  </tr>
</table>

The main difference between invoking this script and using [[WebChanges]] is that [[WebChanges]] is based on a `%SEARCH%`, while this script reads the `changes` file in each web, making it much faster.

**NOTE**: The result from `changes` script and the topic [[WebChanges]] can be different, if the `changes` file is deleted from a web. In particular, in new installations the `changes` script will return no results while the [[WebChanges]] topic will.

### <a name="=configure="></a> `configure`

`configure` is the browser script used for inspection and configuration of the TWiki configuration. None of the parameters to this script are useable for any purpose except `configure`.

### <a name="=edit="></a> `edit`

The `edit` scipt understands the following parameters, typically supplied by HTML input fields:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>action</code></td>
    <td> Optional. Use the editaction template instead of the standard edit. If action=text, then hide the form. If action=form hide the normal text area and only edit the form. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>onlynewtopic</code></td>
    <td> If set, error if topic already exists </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>onlywikiname</code></td>
    <td> If set, error if topic name is not a [[Main/WikiWord]]</td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>templatetopic</code></td>
    <td> The name of the template topic, copied to get the initial content </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>text</code></td>
    <td> Initial text for the topic </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>topicparent</code></td>
    <td> The parent topic </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>formtemplate</code></td>
    <td> Name of the form to instantiate in the topic. Overrides the form set in the <code>templatetopic</code> if defined. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>contenttype</code></td>
    <td> Optional parameter that defines the application type to write into the CGI header. Defaults to <code>text/html</code>. May be used to invoke alternative client applications </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>anyname</code></td>
    <td> Any parameter can passed to the new topic; if the template topic contains <code>%URLPARAM{"anyname"}%</code>, it will be replaced by its value </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>breaklock</code></td>
    <td> If set, any lease conflicts will be ignored, and the edit will proceed even if someone is already editing the topic. </td>
    <td>   </td>
  </tr>
</table>

Form field values are passed in parameters named 'field' - for example, if I have a field `Status` the parameter name is `Status`.

1. The first sequence of ten or more `X` characters in the topic name will be converted on save to a number such that the resulting topic name is unique in the target web.

NOTE: most skins support the definition of `EDIT_SKIN`, which is used as the value of the `cover` parameter in `edit` URLs. This allows you to override the default edit skin on a web, topic or user basis.

### <a name="=login="></a> `login`

Used for logging in when TWiki login is being used (e.g TemplateLoginManager).

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>origurl</code></td>
    <td> URL that was being accessed when an access violation occurred. the login process will redirect to this URL if it is successful </td>
    <td> none </td>
  </tr>
  <tr>
    <td><code>username</code></td>
    <td> username of user logging in </td>
    <td> none </td>
  </tr>
  <tr>
    <td><code>password</code></td>
    <td> password of user logging in </td>
    <td> none </td>
  </tr>
</table>

### <a name="=logon="></a> `logon`

Used for logging in when Web Server authentication is being used (e.g. ApacheLoginManager). The script does nothing; it is purely a placeholder for triggering the login process. The webserver will be set up to require a valid user to access this script, thus triggering the webserver login process.

### <a name="=manage="></a> `manage`

Performs a range of management functions.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>action</code></td>
    <td> One of <code>createweb</code>, <code>deleteUserAccount</code>, <code>editSettings</code> or <code>saveSettings</code></td>
    <td> none </td>
  </tr>
</table>

#### <a name="=action=createweb="></a> `action=createweb`

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>newweb</code></td>
    <td> Name of the new web </td>
    <td> '' </td>
  </tr>
  <tr>
    <td><code>baseweb</code></td>
    <td> Name of the web to copy to create the new web </td>
    <td> '' </td>
  </tr>
  <tr>
    <td><code>webbgcolor</code></td>
    <td> value for WEBBGCOLOR </td>
    <td> '' </td>
  </tr>
  <tr>
    <td><code>sitemapwhat</code></td>
    <td> Value for SITEMAPWHAT </td>
    <td> '' </td>
  </tr>
  <tr>
    <td><code>sitemapuseto</code></td>
    <td> Value for SITEMAPUSETO </td>
    <td> '' </td>
  </tr>
  <tr>
    <td><code>nosearchall</code></td>
    <td> Value for NOSEARCHALL </td>
    <td> '' </td>
  </tr>
</table>

#### <a name="=action=delete_UserAccount="></a> `action=deleteUserAccount`

Unregisters (removes) the currently logged-in user.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>password</code></td>
    <td> Users' password </td>
    <td> none </td>
  </tr>
</table>

#### <a name="=action=editSettings="></a> `action=editSettings`

No parameters

#### <a name="=action=bulkRegister="></a> `action=bulkRegister`

See [[BulkRegistration]].

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>OverwriteHomeTopics</code></td>
    <td> Whether to overwrite existing home topics or not </td>
    <td> false </td>
  </tr>
  <tr>
    <td><code>EmailUsersWithDetails</code></td>
    <td> Whether to mail registered users or not </td>
    <td> false </td>
  </tr>
  <tr>
    <td><code>LogTopic</code></td>
    <td> Topic to save the log in </td>
    <td> Same as topic name, with 'Result' appended. </td>
  </tr>
</table>

#### <a name="=action=saveSettings="></a> `action=saveSettings`

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>text</code></td>
    <td> Text of the topic </td>
    <td> '' </td>
  </tr>
  <tr>
    <td><code>originalrev</code></td>
    <td> Revision that the edit started on </td>
    <td> Most recent revision </td>
  </tr>
</table>

All other parameters may be interpreted as form fields, depending on the current form definition in the topic.

### <a name="=oops="></a> `oops`

This script is mainly used for rendering pages containing error messages, though it is also used for some functional actions such as manage pages (move topic etc).

`oops` templates are used with the `oops` script to generate system messages. This is done to make internationalisation or other local customisations simple.

The `oops` script supports the following parameters:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>template</code></td>
    <td> Name of the template file to display </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>def</code></td>
    <td> Optional, can be set to the name of a single definition within <code>template</code>. This definition will be instantiated in the <code>template</code> wherever <code>%INSTANTIATE%</code> is seen. This lets you use a single template file for many messages. For an example, see <code>oopsmanagebad.tmpl</code>. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>paramN</code></td>
    <td> Where N is an integer from 1 upwards. These values will be substituted into <code>template</code> for <code>%PARAM1%</code> etc. </td>
    <td>   </td>
  </tr>
</table>

### <a name="=passwd="></a> `passwd`

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>action</code></td>
    <td> one of <code>changePassword</code> or <code>resetPassword</code></td>
    <td> none </td>
  </tr>
</table>

Other parameters as described under `manage`, `action=changePassword`.

#### <a name="=action=changePassword="></a> `action=changePassword`

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>username</code></td>
    <td> Username </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>oldpassword</code></td>
    <td> Existing password (plain text) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>password</code></td>
    <td> New password (plain text) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>passwordA</code></td>
    <td> New password confirmation (plain text) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>TopicName</code></td>
    <td> ? </td>
    <td>   </td>
  </tr>
</table>

### <a name="=preview="></a> `preview`

This script is _deprecated_. Its functions are covered by the `save` script.

### <a name="=rdiff="></a> `rdiff`

Renders the differences between version of a TWiki topic

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td> rev1 </td>
    <td> the higher revision </td>
    <td>   </td>
  </tr>
  <tr>
    <td> rev2 </td>
    <td> the lower revision </td>
    <td>   </td>
  </tr>
  <tr>
    <td> render </td>
    <td> the rendering style {sequential, sidebyside, raw, debug} </td>
    <td> DIFFRENDERSTYLE, <code>sequential</code></td>
  </tr>
  <tr>
    <td> type </td>
    <td> history, diff, last} history diff, version to version, last version to previous </td>
    <td><code>diff</code></td>
  </tr>
  <tr>
    <td> context </td>
    <td> number of lines of context </td>
    <td>   </td>
  </tr>
</table>

TODO:

- add a \{word\} render style

### <a name="=register="></a> `register`

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>action</code></td>
    <td><code>register</code> or <code>verify</code> or <code>resetPassword</code> or <code>approve</code></td>
    <td>   </td>
  </tr>
</table>

### <a name="=rename="></a> `rename`

Used for renaming topics.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>skin</code></td>
    <td> skin(s) to use </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>newweb</code></td>
    <td> new web name </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>newtopic</code></td>
    <td> new topic name </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>breaklock</code></td>
    <td>   </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>attachment</code></td>
    <td>   </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>confirm</code></td>
    <td> if defined, requires a second level of confirmation </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>currentwebonly</code></td>
    <td> if defined, searches current web only for links to this topic </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>nonwikiword</code></td>
    <td> if defined, a non-wikiword is acceptable for the new topic name </td>
    <td>   </td>
  </tr>
</table>

### <a name="=resetpasswd="></a> `resetpasswd`

Reset the password for a single or multiple users

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>LoginName</code></td>
    <td><strong>list</strong> of usernames to reset </td>
    <td> none - error if not set </td>
  </tr>
  <tr>
    <td><code>Introduction</code></td>
    <td> message to be sent alongside the reset, most often used to announce to the user that they have been given an account. </td>
    <td> '' </td>
  </tr>
</table>

This is used by [[BulkResetPassword]] and [[ResetPassword]]. Only users belonging to the [[TWikiAdminGroup]] can provide a list of [[LoginNames]], non-admins can only provide a single [[LoginName]].

[[BulkRegistration]] provides the means to create multiple accounts but it does not announce those accounts to the users who own them. [[BulkResetPassword]] is used to assign the passwords, the Introduction is used to explain why they are receiving the mail.

### <a name="=rest="></a> `rest`

This REST ([Representational State Transfer](http://en.wikipedia.org/wiki/REST)) script can be invoked via http in a similar way as the view script (see **Invocation Examples**, below) to execute a function that is associated to a "subject" and a "verb" (see below). It'll print the result directly to the stream unless the `endPoint` parameter is specified, in which case the control is redirected to the given topic.

The `rest` script itself uses one parameter:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <td><code>endPoint</code></td>
    <td> Where to redirect the response once the request is served, in the form "Web.Topic" </td>
  </tr>
</table>

Any additional parameters are passed directly to the function (i.e: The function can get any other parameter using the CGI $query object)

#### <a name="Invocation Examples"></a> Invocation Examples

The `rest` script assumes that it will be called with URL in the form:

`http://my.host/bin/rest/<subject>/<verb>`

where `<subject>` must be the [[WikiWord]] name of one of the installed [[TWikiPlugins]], and the `<verb>` is the alias for the function registered using the `registerRESTHandler`. The `<subject>` and `<verb>` are then used to lookup and call the registered function.

Functions outside the Plugins also can be registered, but please consider the security implications of allowing URL access, as functions can sidestep TWiki Authentication &amp; Authorisation settings.

`<subject>` and `<verb>` are checked for illegal characters exactly in the same way as the web and topic names.

As an example, the [[EmptyPlugin]] has registered a function to be used with the `rest` script under the subject **EmptyPlugin** and the verb **example**. Click below to see the `rest` script in action (run as [[TWikiGuest]]).

[Call the Plugin](http://www.dementia.org/twiki/rest/EmptyPlugin/example?debugenableplugin=EmptyPlugin)

You can also call the function from the command line, but this will be run as the [[TWikiAdminGroup]] (as it is assumed that shell access is secure) - eg:

    ./rest EmptyPlugin.example

Note that for calls to Plugins, they must be enabled in `configure`.

### <a name="=save="></a> `save`

The `save` script performs a range of save-related functions, as selected by the `action` parameter.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>action_save=1</code></td>
    <td><strong>default</strong>; save, return to view, dontnotify is OFF </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_quietsave=1</code></td>
    <td> save, and return to view, <code>dontnotify</code> is ON </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_checkpoint</code></td>
    <td> save and redirect to the edit script, <code>dontnotify</code> is ON </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_cancel</code></td>
    <td> exit without save, return to view </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_preview</code></td>
    <td> preview edited text </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_addform</code></td>
    <td> Redirect to the "change form" page. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_replaceform...</code></td>
    <td> Redirect to the "change form" page. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_delRev</code></td>
    <td><strong>Administrators only</strong> delete the most recent revision of the topic - all other parameters are ignored. You have to be a member of [[Main/TWikiAdminGroup]] to use this, and not all store implementations will support it. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>action_repRev</code></td>
    <td><strong>Administrators only</strong> replace the text of the most recent revision of the topic with the text in the <code>text</code> parameter. <code>text</code> must included embedded meta-data tags. All other parameters are ignored. You have to be a member of [[Main/TWikiAdminGroup]] to use this, and not all store implementations will support it. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>onlynewtopic</code></td>
    <td> If set, error if topic already exists </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>onlywikiname</code></td>
    <td> If set, error if topic name is not a [[Main/WikiWord]]</td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>dontnotify</code></td>
    <td> if defined, suppress change notification </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>templatetopic</code></td>
    <td> Name of a topic to use as a template for the text and form </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>text</code></td>
    <td> New text of the topic </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>forcenewrevision</code></td>
    <td> if set, forces a revision even if TWiki thinks one isn't needed </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>topicparent</code></td>
    <td> If 'none' remove any current topic parent. If the name of a topic, set the topic parent to this. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>formtemplate</code></td>
    <td> if defined, use the named template for the form </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>editaction</code></td>
    <td> When action is <code>checkpoint</code>, <code>add form</code> or <code>replace form...</code>, this is used as the <code>action</code> parameter to the <code>edit</code> script that is redirected to after the save is complete. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>originalrev</code></td>
    <td> Revision on which the edit started. </td>
    <td>   </td>
  </tr>
</table>

Any errors will cause a redirect to an `oops` page.

The parameters are interpreted in according to the following rules.

1. The first sequence of ten or more `X` characters in the topic name will be converted to a number such that the resulting topic name is unique in the target web.
2. When the action is `save`, `checkpoint`, `quietsave`, or `preview`:
  1. The new text is taken from the `text` parameter, if it is defined,
    - otherwise it is taken from the `templatetopic`, if it is defined,
    - otherwise it is taken from the previous version of the topic, if any,
  2. The name of the new form is taken from the `formtemplate`, if defined
    - otherwise it is taken from the `templatetopic`, if defined,
    - otherwise it is taken from the previous version of the topic, if any,
    - otherwise no form is attached.
  3. The value for each field in the form is taken from the query, if it is defined
    - otherwise it is taken from the `templatetopic`, if defined,
    - otherwise it is taken from the previous version of the topic, if any,
    - otherwise it defaults to the empty string.

Merging is only enabled if the topic text comes from `text` and `originalrev` is &gt; 0 and is not the same as the revision number of the most recent revision. If merging is enabled both the topic and the meta-data are merged.

Form field values are passed in parameters named 'field' - for example, if I have a field `Status` the parameter name is `Status`.

### <a name="=search="></a> `search`

CGI gateway to the `%SEARCH%` functionality driven by the following CGI parameters:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter: </strong></th>
    <th bgcolor="#99CCCC"><strong> Description: </strong></th>
    <th bgcolor="#99CCCC"><strong> Default: </strong></th>
  </tr>
  <tr>
    <td><code>"text"</code></td>
    <td> Search term. Is a keyword search, literal search or regular expression search, depending on the <code>type</code> parameter. [[Main/SearchHelp]] has more </td>
    <td> required </td>
  </tr>
  <tr>
    <td><code>search="text"</code></td>
    <td> (Alternative to above) </td>
    <td> N/A </td>
  </tr>
  <tr>
    <td><code>web="Name"</code><br /><code>web="Main, Know"</code><br /><code>web="all"</code></td>
    <td> Comma-separated list of webs to search. The special word <code>all</code> means all webs that doe <strong>not</strong> have the <code>NOSEARCHALL</code> variable set to <code>on</code> in their [[Main/WebPreferences]]. You can specifically <strong>exclude</strong> webs from an <code>all</code> search using a minus sign - for example, <code>web="all,-Secretweb"</code>. </td>
    <td> Current web </td>
  </tr>
  <tr>
    <td><code>topic="WebPreferences"</code><br /><code>topic="*Bug"</code></td>
    <td> Limit search to topics: A topic, a topic with asterisk wildcards, or a list of topics separated by comma. </td>
    <td> All topics in a web </td>
  </tr>
  <tr>
    <td><code>excludetopic="Web*"</code><br /><code>excludetopic="WebHome, WebChanges"</code></td>
    <td> Exclude topics from search: A topic, a topic with asterisk wildcards, or a list of topics separated by comma. </td>
    <td> None </td>
  </tr>
  <tr>
    <td><code>type="keyword"</code><br /><code>type="literal"</code><br /><code>type="regex"</code></td>
    <td> Do a keyword search like <code>soap "web service" -shampoo</code>; a literal search like <code>web service</code>; or [[Main/RegularExpression]] search like <code>soap;web service;!shampoo</code></td>
    <td><code>%SEARCHVAR- DEFAULTTYPE%</code> [[Main/TWikiPreferences]] setting (%SEARCHVARDEFAULTTYPE%) </td>
  </tr>
  <tr>
    <td><code>scope="topic"</code><br /><code>scope="text"</code><br /><code>scope="all"</code></td>
    <td> Search topic name (title); the text (body) of topic; or all (both) </td>
    <td><code>"text"</code></td>
  </tr>
  <tr>
    <td><code>order="topic"</code><br /><code>order="created"</code><br /><code>order="modified"</code><br /><code>order="editby"</code><br /><code>order=<br /> "formfield(name)"</code></td>
    <td> Sort the results of search by the topic names, topic creation time, last modified time, last editor, or named field of [[Main/TWikiForms]]. The sorting is done web by web; in case you want to sort across webs, create a [[Main/FormattedSearch]] table and sort it with [[Main/TablePlugin]]'s initsort </td>
    <td> Sort by topic name </td>
  </tr>
  <tr>
    <td><code>limit="all"</code><br /><code>limit="16"</code></td>
    <td> Limit the number of results returned. This is done after sorting if <code>order</code> is specified </td>
    <td> All results </td>
  </tr>
  <tr>
    <td><code>date="..."</code></td>
    <td> limits the results to those pages with latest edit time in the given [[Main/TimeInterval]]. </td>
    <td> All results </td>
  </tr>
  <tr>
    <td><code>reverse="on"</code></td>
    <td> Reverse the direction of the search </td>
    <td> Ascending search </td>
  </tr>
  <tr>
    <td><code>casesensitive="on"</code></td>
    <td> Case sensitive search </td>
    <td> Ignore case </td>
  </tr>
  <tr>
    <td><code>bookview="on"</code></td>
    <td>[[Main/BookView]] search, e.g. show complete topic text </td>
    <td> Show topic summary </td>
  </tr>
  <tr>
    <td><code>nonoise="on"</code></td>
    <td> Shorthand for <code>nosummary="on" nosearch="on" nototal="on" zeroresults="off" noheader="on" noempty="on"</code></td>
    <td> Off </td>
  </tr>
  <tr>
    <td><code>nosummary="on"</code></td>
    <td> Show topic title only </td>
    <td> Show topic summary </td>
  </tr>
  <tr>
    <td><code>nosearch="on"</code></td>
    <td> Suppress search string </td>
    <td> Show search string </td>
  </tr>
  <tr>
    <td><code>noheader="on"</code></td>
    <td> Suppress search header <br /><span style="background: #FFB0B0"> <strong>Topics: Changed: By:</strong> </span></td>
    <td> Show search header </td>
  </tr>
  <tr>
    <td><code>nototal="on"</code></td>
    <td> Do not show number of topics found </td>
    <td> Show number </td>
  </tr>
  <tr>
    <td><code>zeroresults="off"</code></td>
    <td> Suppress all output if there are no hits </td>
    <td><code>zeroresults="on"</code>, displays: "Number of topics: 0" </td>
  </tr>
  <tr>
    <td><code>noempty="on"</code></td>
    <td> Suppress results for webs that have no hits. </td>
    <td> Show webs with no hits </td>
  </tr>
  <tr>
    <td><code>header="..."</code><br /><code>format="..."</code></td>
    <td> Custom format results: see <strong>[[Main/FormattedSearch]]</strong> for usage, variables &amp; examples </td>
    <td> Results in table </td>
  </tr>
  <tr>
    <td><code>expandvariables="on"</code></td>
    <td> Expand variables before applying a [[Main/FormattedSearch]] on a search hit. Useful to show the expanded text, e.g. to show the result of a [[Main/SpreadSheetPlugin]] <code>%CALC{}%</code> instead of the formula </td>
    <td> Raw text </td>
  </tr>
  <tr>
    <td><code>multiple="on"</code></td>
    <td> Multiple hits per topic. Each hit can be [[Main/FormattedSearch]]. The last token is used in case of a regular expression ";" <em>and</em> search </td>
    <td> Only one hit per topic </td>
  </tr>
  <tr>
    <td><code>nofinalnewline="on"</code></td>
    <td> If <code>on</code>, the search variable does not end in a line by itself. Any text continuing immediately after the search tag on the same line will be rendered as part of the table generated by the search, if appropriate. </td>
    <td><code>off</code></td>
  </tr>
  <tr>
    <td><code>separator=", "</code></td>
    <td> Line separator between hits </td>
    <td> Newline <code>"$n"</code></td>
  </tr>
</table>

### <a name="=statistics="></a> `statistics`

Refresh the [[WebStatistics]] topics in range of webs.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>webs</code></td>
    <td><strong>list</strong> of webs to run stats on </td>
    <td> none </td>
  </tr>
</table>

### <a name="=twiki="></a> `twiki`

Single-script interface to the functionality of all the other scripts. Experimental, not for production use. Read the code if you want to know more.

### <a name="=upload="></a> `upload`

Uploads an attachment to a topic. The HTTP request is expected to be in `multipart/form-data` format.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>hidefile</code></td>
    <td> if defined, will not show file in attachment table </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>filepath</code></td>
    <td> local (client) path name of the file being uploaded. This is used to look up the data for the file in the HTTP query. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>filename</code></td>
    <td> deprecated, do not use </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>filecomment</code></td>
    <td> Comment to associate with file in attachment table </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>createlink</code></td>
    <td> if defined, will create a link to file at end of topic </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>changeproperties</code></td>
    <td> if defined, this is a property change operation <strong>only</strong> - no file will be uploaded. </td>
    <td> null </td>
  </tr>
</table>

You can use a tool like `curl` to upload files from the command line using this script.

### <a name="=view="></a> `view`

Used for viewing topics.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>raw=on</code></td>
    <td> Shows the text of the topic in a scrollable textarea </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>raw=debug</code></td>
    <td> As <code>raw=on</code>, but also shows the metadata (forms etc) associated with the topic. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>raw=text</code></td>
    <td> Shows only the source of the topic, as plain text (Content-type: text/plain). Only shows the body text, <strong>not</strong> the form or other meta-data. </td>
  </tr>
  <tr>
    <td><code>raw=all</code></td>
    <td> Shows only the source of the topic, as plain text (Content-type: text/plain), <strong>with embedded meta-data</strong>. This may be useful if you want to extract the source of a topic to a local file on disc. </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>contenttype</code></td>
    <td> Allows you to specify a different <strong>Content-Type:</strong> (e.g. <code>contenttype=text/plain</code>) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>rev</code></td>
    <td> Revision to view (e.g. <code>rev=45</code>) </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>template</code></td>
    <td> Allows you to specify a different skin template, overriding the 'view' template the view script would normally use. The default template is <code>view</code>. For example, you could specify [[%WEB%/%TOPIC%?template=edit]]. This is mainly useful when you have specialised templates for a TWiki Application. </td>
    <td>   </td>
  </tr>
</table>

%X% For historical reasons, the view script has a special interpretation of the `text` skin. In earlier TWiki versions the `skin=text` parameter was used like this: `http://.../view/MyWeb/MyTopic?skin=text&contenttype=text/plain&raw=on` which shows the topic as plain text; useful for those who want to download plain text for the topic. Using `skin=text` this way is **DEPRECATED**, use `raw=text` instead.

### <a name="=viewfile="></a> `viewfile`

Used for viewing attachments. Normally, a site will publish the attachments (`pub`) directory using a URL. However if it contains sensitive information, you will want to protect attachments using [[TWikiAccessControls]]. In this case, you can use the `viewfile` script to give access to attachments while still checking access controls.

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <th bgcolor="#99CCCC"><strong> Parameter </strong></th>
    <th bgcolor="#99CCCC"><strong> Description </strong></th>
    <th bgcolor="#99CCCC"><strong> Default </strong></th>
  </tr>
  <tr>
    <td><code>filename</code></td>
    <td> name of attachment </td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>rev</code></td>
    <td> Revision to view </td>
    <td>   </td>
  </tr>
</table>

## <a name="Command Line Scripts"></a> Command Line Scripts

Details on command line scripts located in the `twiki/tools` directory.

### <a name="=geturl.pl="></a> `geturl.pl`

This is a very simple script to get the content of a web site. It is marked as _deprecated_ and might be removed (or enhanced) in a future TWiki release. Its functions are covered by the standard `wget` and `curl` commands.

- Usage: `geturl <host> <path> [<port> [<header>]]`
- Example: `geturl some.domain /some/dir/file.html 80`
- Will get: `http://some.domain:80/some/dir/file.html`

### <a name="=rewriteshebang.pl="></a> `rewriteshebang.pl`

Simple script to rewrite the `#!/usr/bin/perl` shebang lines specific to your local Perl installation. It will rewrite the first line of all your TWiki cgi scripts so they use a different shebang line. Use it if your perl is in a non-standard location, or you want to use a different interpreter (such as 'speedy').

### <a name="=tick_twiki.pl="></a> `tick_twiki.pl`

This script executes a number of non-essential regular administration tasks that will help keep your TWiki healthy and happy, such as removing expired sessions and lease files.

It is intended to be run as a cron job or a scheduled task once a week. Example crontab entry:%BR% `0 0 * * 0 cd /usr/twiki/bin && perl ../tools/tick_twiki.pl`

**_Note:_** The script has to be run by a user who can write files created by the webserver user.

**_Related Topics:_** [[AdminDocumentationCategory]], [[DeveloperDocumentationCategory]]
