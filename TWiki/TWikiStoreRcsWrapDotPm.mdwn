# <a name="Package &lt;code&gt;TWiki::Store::_RcsWrap="></a> Package =TWiki::Store::RcsWrap

This package does not publish any methods. It implements the virtual methods of the [[TWiki::Store::RcsFile|Main/TWikiStoreRcsFileDotPm]] superclass.

Wrapper around the RCS commands required by TWiki. There is one of these object for each file stored under RCS.

<div>
  <ul>
    <li><a href="#Package =TWiki::Store::_RcsWrap="> Package TWiki::Store::RcsWrap</a><ul>
        <li><a href="#ObjectMethod <strong>finish</strong> ()"> ObjectMethod finish <tt>()</tt></a></li>
        <li><a href="#StaticMethod *parse_RevisionDiff"> StaticMethod parseRevisionDiff <tt>($text) -&gt; \@diffArray</tt></a></li>
      </ul>
    </li>
  </ul>
</div>

## <a name="ObjectMethod &lt;strong&gt;finish&lt;/strong&gt; ()"></a> [[ObjectMethod]] **finish** `()`

Break circular references.

## <a name="StaticMethod &lt;strong&gt;parse_RevisionDiff"></a> [[StaticMethod]] \*parseRevisionDiff `($text) -> \@diffArray`

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <td> Description: </td>
    <td> parse the text into an array of diff cells </td>
  </tr>
  <tr>
    <td> #Description: </td>
    <td> unlike Algorithm::Diff I concatinate lines of the same diffType that are sqential (this might be something that should be left up to the renderer) </td>
  </tr>
  <tr>
    <td> Parameter: <code>$text</code></td>
    <td> currently unified or rcsdiff format </td>
  </tr>
  <tr>
    <td> Return: <code>\@diffArray</code></td>
    <td> reference to an array of [ diffType, $right, $left ] </td>
  </tr>
  <tr>
    <td> TODO: </td>
    <td> move into [[Main/RcsFile]] and add indirection in Store </td>
  </tr>
</table>
