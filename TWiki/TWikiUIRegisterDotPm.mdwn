# <a name="Package &lt;code&gt;TWiki::UI::Register="></a> Package =TWiki::UI::Register

User registration handling.

<div>
  <ul>
    <li><a href="#Package =TWiki::UI::Register="> Package TWiki::UI::Register</a><ul>
        <li><a href="#StaticMethod <strong>register_cgi</strong> ($se"> StaticMethod register_cgi <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod <strong>bulkRegister</strong> ($se"> StaticMethod bulkRegister <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod *register_AndNext*"> StaticMethod registerAndNext <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod <strong>register</strong> ($sessio"> StaticMethod register <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod <strong>resetPassword</strong> ($s"> StaticMethod resetPassword <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod <strong>changePassword</strong> ($"> StaticMethod changePassword <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod *verify_EmailAddres"> StaticMethod verifyEmailAddress <tt>($session)</tt></a></li>
      </ul>
    </li>
  </ul>
</div>

## <a name="StaticMethod &lt;strong&gt;register_cgi&lt;/strong&gt; ($se"></a> [[StaticMethod]] **register\_cgi** `($session)`

`register` command handler. This method is designed to be invoked via the `UI::run` method.

## <a name="StaticMethod &lt;strong&gt;bulkRegister&lt;/strong&gt; ($se"></a> [[StaticMethod]] **bulkRegister** `($session)`

Called by [[ManageCgiScript]]::bulkRegister (requires authentication) with topic = the page with the entries on it.

## <a name="StaticMethod &lt;strong&gt;register_AndNext*"></a><a name="StaticMethod *register_AndNext&lt;/strong&gt; "></a> [[StaticMethod]] **registerAndNext** `($session)`

This is called when action = register or action = ""

It calls register and either Verify or Finish.

Hopefully we will get workflow integrated and rewrite this to be table driven

## <a name="StaticMethod &lt;strong&gt;register&lt;/strong&gt; ($sessio"></a> [[StaticMethod]] **register** `($session)`

This is called through: [[TWikiRegistration]] -&gt; [[RegisterCgiScript]] -&gt; here

## <a name="StaticMethod &lt;strong&gt;resetPassword&lt;/strong&gt; ($s"></a> [[StaticMethod]] **resetPassword** `($session)`

Generates a password. Mails it to them and asks them to change it. Entry point intended to be called from UI::run

## <a name="StaticMethod &lt;strong&gt;changePassword&lt;/strong&gt; ($"></a> [[StaticMethod]] **changePassword** `($session)`

Change the user's password and/or email. Details of the user and password are passed in CGI parameters.

1. Checks required fields have values
2. get wikiName and userName from getUserByEitherLoginOrWikiName(username)
3. check passwords match each other, and that the password is correct, otherwise 'wrongpassword'
4. TWiki::User::updateUserPassword
5. 'oopschangepasswd'

The [[NoPasswdUser]] case is not handled.

An admin user can change other user's passwords.

## <a name="StaticMethod &lt;strong&gt;verify_EmailAddres"></a> [[StaticMethod]] \*verifyEmailAddress `($session)`

This is called: on receipt of the activation password -&gt; [[RegisterCgiScript]] -&gt; here

1. calls \_loadPendingRegistration(activation password)
2. throws oops if appropriate
3. calls emailRegistrationConfirmations
4. still calls 'oopssendmailerr' if a problem, but this is not done uniformly
