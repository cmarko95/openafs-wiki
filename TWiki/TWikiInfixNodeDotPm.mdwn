# <a name="Package &lt;code&gt;TWiki::Infix::Node="></a> Package =TWiki::Infix::Node

Base class for node types generated by Infix::Parser. You don't **have** to use it, but it may be useful.

<div>
  <ul>
    <li><a href="#Package =TWiki::Infix::Node="> Package TWiki::Infix::Node</a><ul>
        <li><a href="#ClassMethod <strong>newNode</strong> ($o,@p) ->"> ClassMethod newNode <tt>($o,@p) -&gt; \$if</tt></a></li>
        <li><a href="#ClassMethod <strong>newLeaf</strong> ($val,$typ"> ClassMethod newLeaf <tt>($val,$type) -&gt; \$if</tt></a></li>
        <li><a href="#ObjectMethod <strong>evaluate</strong> (...) ->"> ObjectMethod evaluate <tt>(...) -&gt; $result</tt></a></li>
      </ul>
    </li>
  </ul>
</div>

## <a name="ClassMethod &lt;strong&gt;newNode&lt;/strong&gt; ($o,@p) -"></a><a name="ClassMethod &lt;strong&gt;newNode&lt;/strong&gt; ($o,@p) - "></a> [[ClassMethod]] **newNode** `($o,@p) -> \$if`

Construct a new parse node (contract with Infix::Parser)

## <a name="ClassMethod &lt;strong&gt;newLeaf&lt;/strong&gt; ($val,$typ"></a> [[ClassMethod]] **newLeaf** `($val,$type) -> \$if`

Construct a new terminal node (contract with Infix::Parser)

## <a name="ObjectMethod &lt;strong&gt;evaluate&lt;/strong&gt; (...) -"></a><a name="ObjectMethod &lt;strong&gt;evaluate&lt;/strong&gt; (...) - "></a> [[ObjectMethod]] **evaluate** `(...) -> $result`

Execute the parse node. The parameter array is passed on, by reference, to the evaluation functions.
