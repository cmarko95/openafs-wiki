# <a name="Package &lt;code&gt;TWiki::UI::Manage="></a> Package =TWiki::UI::Manage

UI functions for web, topic and user management

<div>
  <ul>
    <li><a href="#Package =TWiki::UI::Manage="> Package TWiki::UI::Manage</a><ul>
        <li><a href="#StaticMethod <strong>manage</strong> ($session)"> StaticMethod manage <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod <strong>rename</strong> ($session)"> StaticMethod rename <tt>($session)</tt></a></li>
        <li><a href="#StaticMethod <strong>move</strong> ($session,$o"> StaticMethod move <tt>($session,$oldWeb,$oldTopic,$newWeb,$newTopic,$attachment,\@refs)</tt></a></li>
        <li><a href="#StaticMethod *get_ReferringTopic"> StaticMethod getReferringTopics <tt>($session,$web,$topic,$allWebs) -&gt; \%matches</tt></a></li>
      </ul>
    </li>
  </ul>
</div>

## <a name="StaticMethod &lt;strong&gt;manage&lt;/strong&gt; ($session)"></a> [[StaticMethod]] **manage** `($session)`

`manage` command handler. This method is designed to be invoked via the `TWiki::UI::run` method.

## <a name="StaticMethod &lt;strong&gt;rename&lt;/strong&gt; ($session)"></a> [[StaticMethod]] **rename** `($session)`

`rename` command handler. This method is designed to be invoked via the `TWiki::UI::run` method. Rename the given topic. Details of the new topic name are passed in CGI parameters:

<table border="1" cellpadding="0" cellspacing="0">
  <tr>
    <td><code>skin</code></td>
    <td> skin(s) to use </td>
  </tr>
  <tr>
    <td><code>newweb</code></td>
    <td> new web name </td>
  </tr>
  <tr>
    <td><code>newtopic</code></td>
    <td> new topic name </td>
  </tr>
  <tr>
    <td><code>breaklock</code></td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>attachment</code></td>
    <td>   </td>
  </tr>
  <tr>
    <td><code>confirm</code></td>
    <td> if defined, requires a second level of confirmation </td>
  </tr>
  <tr>
    <td><code>currentwebonly</code></td>
    <td> if defined, searches current web only for links to this topic </td>
  </tr>
  <tr>
    <td><code>nonwikiword</code></td>
    <td> if defined, a non-wikiword is acceptable for the new topic name </td>
  </tr>
</table>

## <a name="StaticMethod &lt;strong&gt;move&lt;/strong&gt; ($session,$o"></a> [[StaticMethod]] **move** `($session,$oldWeb,$oldTopic,$newWeb,$newTopic,$attachment,\@refs)`

Move the given topic, or an attachment in the topic, correcting refs to the topic in the topic itself, and in the list of topics (specified as web.topic pairs) in the \\@refs array.

- `$session` - reference to session object
- `$oldWeb` - name of old web - must be untained
- `$oldTopic` - name of old topic - must be untained
- `$newWeb` - name of new web - must be untained
- `$newTopic` - name of new topic - must be untained
- `$attachment` - name of the attachment to move (from oldtopic to newtopic) (undef to move the topic) - must be untaineted
- `\@refs` - array of webg.topics that must have refs to this topic converted

Will throw TWiki::OopsException or TWiki::AccessControlException on an error.

## <a name="StaticMethod &lt;strong&gt;get_ReferringTopic"></a> [[StaticMethod]] \*getReferringTopics `($session,$web,$topic,$allWebs) -> \%matches`

- `$session` - the session
- `$web` - web to search for
- `$topic` - topic to search for
- `$allWebs` - 0 to search $web only. 1 to search all webs _except_ $web.

Returns a hash that maps the web.topic name to a summary of the lines that matched. Will _not_ return $web.$topic in the list
