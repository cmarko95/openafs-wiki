This is a guide on how to build [[OpenAFS]] from source code. Note that [[OpenAFS]] pre-built binaries are available on the [[OpenAFS]] site and are available as prebuilt packages for many platforms. These instructions may be useful for you if you need to build [[OpenAFS]] from source.

### <a name="Requirements"></a> Requirements

Tools

- cvs client
- autoconf
- automake
- perl 5.6
- gcc (versions?)
- GNU make
- lex/yacc (flex/bison)

Libraries

- libc
- kerberos, optional, but recommended
- ncurses
- kernel headers

If you are building on Debian, you can get the required software with the following apt-get commands.

      apt-get install cvs autoconf automake make gcc flex bison
      apt-get install libc6-dev libkrb5-dev libncurses5-dev linux-headers-$(uname -r)

### <a name="Getting the Source Code from CVS"></a> Getting the Source Code from CVS

You can get development snapshots from the [[OpenAFS]] CVS repository. The CVS tree may not always have code which can currently be built. While every effort is made to keep the head of the tree buildable, you may at any time find yourself between commits and hence have a tree which does not build, or worse, causes more serious problems.

First you need to run cvs login. This step is normally only done once. A ~/.cvspass file will be created for additional checkouts.

       cvs -d :pserver:anonymous@cvs.openafs.org:/cvs  login
       password is anonymous

To check out the 1.4 branch:

       cvs -d :pserver:anonymous@cvs.openafs.org:/cvs co -r openafs-stable-1_4_x openafs

To check out the 1.5 development branch:

       cvs -d :pserver:anonymous@cvs.openafs.org:/cvs co -r openafs-devel-1_5_x openafs

See the CVSWeb interface at <http://www.openafs.org/frameset/cgi-bin/cvsweb.cgi/openafs/> to see a full list of available branches and tags

CVS snapshots do not include files generated by autoconf; You can run regen.sh at the top level to create these files. You will need to have autoconf and automake installed on your system.

### <a name="Building the Binaries"></a> Building the Binaries

#### <a name="Quick Answer"></a> Quick Answer

To build [[OpenAFS]] with Kerberos 5 support and the traditional paths:

       cd openafs
       ./regen.sh
       ./configure  --enable-debug --enable-transarc-paths --with-krb5-conf=(full path to krb5-config script)
       make
       make dest

You will need the Kerberos development libraries to build Kerbose support.

### <a name="Installing the Binaries"></a> Installing the Binaries

After make dest, the binaries are placed into a dest directory, under a platform directory, such as i386\_linux26.

      # cp -r i386_linux26/dest/root.client/usr/vice/etc/modload /usr/vice/etc
      # cp i386_linux26/dest/root.client/usr/vice/etc/afsd /usr/vice/etc
      # cp -r i386_linux26/dest/bin /usr/afsws
      # cp -r i386_linux26/dest/etc /usr/afsws
      # cp -r i386_linux26/dest/include /usr/afsws
      # cp -r i386_linux26/dest/lib /usr/afsws
      # cp -r i386_linux26/dest/root.server/usr/afs/* /usr/afs

### <a name="Initial testing"></a> Initial testing

-- [[MichaelMeffie]] - 09 Oct 2007
