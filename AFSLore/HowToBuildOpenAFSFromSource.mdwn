This is a guide on how to build [[OpenAFS]] from source code. Note that [[OpenAFS]] pre-built binaries are available on the [[OpenAFS]] site and are available as prebuilt packages for many platforms. These instructions may be useful for you if you need to build [[OpenAFS]] from source.

### <a name="Requirements"></a> Requirements

Tools

- cvs client
- autoconf
- automake
- perl 5.6
- gcc (versions?)
- GNU make
- lex/yacc (flex/bison)

Libraries

- libc
- kerberos, optional, but recommended
- ncurses
- kernel headers

The Kerberos development libraries are required if you are going to build with Kerberos 5 support. The [[OpenAFS]] legacy kaserver is deprecated.

If you are building on Debian, you can get the required software with the following apt-get commands.

      apt-get install cvs autoconf automake make gcc flex bison
      apt-get install libc6-dev libkrb5-dev libncurses5-dev linux-headers-$(uname -r)

### <a name="Getting the Source Code from CVS"></a> Getting the Source Code from CVS

You can get development snapshots from the [[OpenAFS]] CVS repository . The CVS tree may not always have code which can currently be built. While every effort is made to keep the head of the tree buildable, you may at any time find yourself between commits and hence have a tree which does not build, or worse, causes more serious problems.

First you need to run cvs login. This step is normally only done once. A ~/.cvspass file will be created for additional checkouts.

       cvs -d :pserver:anonymous@cvs.openafs.org:/cvs  login
       password is anonymous

Before doing a CVS check out, you'll need to decide which branch you want to check out. The trunk is for bleeding edge development and may not even build. The current stable series is openafs-stable-1\_4\_x and the current development work is going on the openafs-devel-1\_5\_x branch.

See the CVSWeb interface at <http://www.openafs.org/frameset/cgi-bin/cvsweb.cgi/openafs/> for the full list of available branches and tags.

To check out the stable branch:

       cvs -d :pserver:anonymous@cvs.openafs.org:/cvs checkout -r openafs-stable-1_4_x openafs

To check out the development branch:

       cvs -d :pserver:anonymous@cvs.openafs.org:/cvs checkout -r openafs-devel-1_5_x openafs

This will create a source tree in a directory named openafs.

Run the regen.sh script to create the configure script.

       cd openafs
       ./regen.sh

### <a name="Building the Binaries"></a> Building the Binaries

#### <a name="Transarc Paths"></a> Transarc Paths

By convention, [[OpenAFS]] server binaries and related files are located in /usr/afs, and client binaries and related files are located in /usr/vice. These are known as Transarc paths, so called because that is is the convention used by Transarc, the company that first commercialized AFS.

To build [[OpenAFS]] with Kerberos 5 support and the traditional, Transarc paths:

       ./configure  --enable-transarc-paths --with-krb5-conf=(full path to krb5-config script)
       make
       make dest

If all goes well, then the binaries are located in a platform sub-directory, the name of which is platform specific, for example 'i386\_linux26/dest'.

The 'make install' command does not work with Transarc paths. You will have to manually copy the binaries into place after running make dest. For more information, see the Quick Start Guide for Unix on the [[OpenAFS]] documentation page.

      # cp -r i386_linux26/dest/root.client/usr/vice/etc/modload /usr/vice/etc
      # cp i386_linux26/dest/root.client/usr/vice/etc/afsd /usr/vice/etc
      # cp -r i386_linux26/dest/bin /usr/afsws
      # cp -r i386_linux26/dest/etc /usr/afsws
      # cp -r i386_linux26/dest/include /usr/afsws
      # cp -r i386_linux26/dest/lib /usr/afsws
      # cp -r i386_linux26/dest/root.server/usr/afs/* /usr/afs

#### <a name="Custom Paths"></a> Custom Paths

To build [[OpenAFS]] with Kerberos 5 support, and with a custom install path,

       ./configure --prefix=/usr/local/openafs --with-krb5-conf=(full path to krb5-config script)
       make
       sudo make install

### <a name="Initial testing"></a> Initial testing

-- [[MichaelMeffie]] - 09 Oct 2007
